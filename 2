#include <iostream>
#include <cstring>
using namespace std;

class Vozac{
    protected:
        char ime[100];
        int vozrast;
        int trki;
        bool veteran;
    public:
        Vozac(char ime[100],int vozrast, int trki, bool veteran){
            strcpy(this->ime,ime);
            this->vozrast=vozrast;
            this->trki=trki;
            this->veteran=veteran;
        };
        virtual double zarabotuvacka() = 0;
        virtual double danok() = 0;
        friend ostream &operator<<(ostream &os,Vozac &v){
            os<<v.ime<<endl<<v.vozrast<<endl<<v.trki<<endl;
            if(v.veteran) os<<"VETERAN"<<endl;
            return os;
        }
        bool operator==(Vozac &v){
            return this->zarabotuvacka()==v.zarabotuvacka();
        }

};
class Avtomobilist : public Vozac{
    private:
        double cena;
    public:
        Avtomobilist(char ime[100],int vozrast, int trki, bool veteran,double cena):Vozac(ime,vozrast,trki,veteran){
            this->cena=cena;
        }
        double zarabotuvacka(){
            return cena/5;
        }
        double danok(){
            return trki>10?0.15*zarabotuvacka():0.10*zarabotuvacka();
        }
};
class Motociklist : public Vozac{
    private:
        int mokjnost;
    public:
        Motociklist(char ime[100],int vozrast, int trki, bool veteran,int mokjnost):Vozac(ime,vozrast,trki,veteran){
            this->mokjnost=mokjnost;
        }
        double zarabotuvacka(){
            return mokjnost*20;
        }
        double danok(){
            return veteran?0.25*zarabotuvacka():0.2*zarabotuvacka();
        }
};
int soIstaZarabotuvachka(Vozac **vozaci,int n,Vozac *v){
    int num=0;
    for(int i=0;i<n;i++){
        if(vozaci[i]->zarabotuvacka()==v->zarabotuvacka()) num++;
    }
    return num;
}

int main() {
	int n, x;
	cin >> n >> x;
	Vozac **v = new Vozac*[n];
	char ime[100];
	int vozrast;
	int trki;
	bool vet;
	for(int i = 0; i < n; ++i) {
		cin >> ime >> vozrast >> trki >> vet;
		if(i < x) {
			float cena_avto;
			cin >> cena_avto;
			v[i] = new Avtomobilist(ime, vozrast, trki, vet, cena_avto);
		} else {
			int mokjnost;
			cin >> mokjnost;
			v[i] = new Motociklist(ime, vozrast, trki, vet, mokjnost);
		}
	}
	cout << "=== DANOK ===" << endl;
	for(int i = 0; i < n; ++i) {
		cout << *v[i];
		cout << v[i]->danok() << endl;
	}
	cin >> ime >> vozrast >> trki >> vet;
	int mokjnost;
	cin >> mokjnost;
	Vozac *vx = new Motociklist(ime, vozrast, trki, vet, mokjnost);
	cout << "=== VOZAC X ===" << endl;
	cout << *vx;
	cout << "=== SO ISTA ZARABOTUVACKA KAKO VOZAC X ===" << endl;
	cout << soIstaZarabotuvachka(v, n, vx);
    for(int i = 0; i < n; ++i) {
        delete v[i];
    }
    delete [] v;
    delete vx;
	return 0;
}
